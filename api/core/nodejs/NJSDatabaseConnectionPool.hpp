// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_NJSDATABASECONNECTIONPOOL_HPP
#define DJINNI_GENERATED_NJSDATABASECONNECTIONPOOL_HPP


#include "../../../core/src/api/DatabaseConnection.hpp"
#include "NJSDatabaseConnection.hpp"
#include <memory>

#include <nan.h>
#include <node.h>
#include "../../../core/src/api/DatabaseConnectionPool.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSDatabaseConnectionPool: public ledger::core::api::DatabaseConnectionPool {
public:

    static void Initialize(Local<Object> target);

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::DatabaseConnectionPool> &object);
    static Nan::Persistent<ObjectTemplate> DatabaseConnectionPool_prototype;
    ~NJSDatabaseConnectionPool()
    {
        njs_impl.Reset();
    };
    NJSDatabaseConnectionPool(Local<Object> njs_implementation){njs_impl.Reset(njs_implementation);};

    /**
     * Get a connection to the database. This method won't be called more than the engine pool size return
     * by DatabaseEngine::getPoolSize.
     * @return A connection to the database
     */
    std::shared_ptr<DatabaseConnection> getConnection();

private:
    /**
     * Get a connection to the database. This method won't be called more than the engine pool size return
     * by DatabaseEngine::getPoolSize.
     * @return A connection to the database
     */
    static NAN_METHOD(getConnection);

    static NAN_METHOD(New);

    Nan::Persistent<Object> njs_impl;
};
#endif //DJINNI_GENERATED_NJSDATABASECONNECTIONPOOL_HPP
