  name: Windows

  on:
  # At the moment, only trigger on working branch
  # Later, trigger on pull request
    push:
      branches:
        - github-actions-migration

  env:
    source_path: 'libcore_source'
    build_path: 'libcore_build'

  jobs:
    prepare:
      runs-on: [self-hosted, windows, x64]
      steps:
        -
          name: Check runner environment
          run: |
            git --version
            cmake --version
            msbuild /help
            cl
            ctest --version

    ###########
    # RELEASE #
    ###########
    release:
      needs: prepare
      runs-on: [self-hosted, windows, x64]
      steps:
        - 
          name: Checkout code
          uses: actions/checkout@v2
          with:
            path: ${{env.source_path}}
            clean: true
            submodules: true
        - 
          name: Build - Cmake
          run: |
            Remove-Item -LiteralPath "${{env.build_path}}" -Force -Recurse -ErrorAction Ignore
            mkdir ${{env.build_path}}
            cd ${{env.build_path}}
            cmake `
              -DBUILD_TESTS=OFF `
              -DSYS_OPENSSL=ON `
              ../${{env.source_path}}
        - 
          name: Build - Make
          run: |
            cmake `
              --build . `
              --config Release `
              -- /m
          working-directory: ${{env.build_path}}
        - 
          name : Upload build files
          uses: actions/upload-artifact@v2
          with:
            name: windows-release-build-files
            path: |
              ${{env.build_path}}/core/src/build/Release/ledger-core.dll
        - 
          name: Clean workspace
          if: ${{ always() }}
          run: |
            echo "Cleaning up previous run"
            Remove-Item -LiteralPath "${{ github.workspace }}/${{env.build_path}}" -Force -Recurse
          continue-on-error: true

    #########
    # DEBUG #
    #########
    debug:
      needs: prepare
      runs-on: [self-hosted, windows, x64]
      steps:
        - 
          name: Checkout code
          uses: actions/checkout@v2
          with:
            path: ${{env.source_path}}
            clean: true
            submodules: true
        - 
          name: Build - Cmake
          run: |
            Remove-Item -LiteralPath "${{env.build_path}}" -Force -Recurse -ErrorAction Ignore
            mkdir ${{env.build_path}}
            cd ${{env.build_path}}
            cmake `
              -DBUILD_TESTS=ON `
              -DSYS_OPENSSL=ON `
              ../${{env.source_path}}
        - 
          name: Build - Make
          run: |
            cmake `
              --build . `
              --config Debug `
              -- `
              /m 
          working-directory: ${{env.build_path}}
        - 
          name : Upload build files
          uses: actions/upload-artifact@v2
          with:
            name: windows-debug-build-files
            path: |
              ${{env.build_path}}/core/src/build/Debug/ledger-core.dll
              ${{env.build_path}}/core/src/build/Debug/ledger-core.pdb
        - 
          name: Run Unit Tests
          run: |
            ctest --interactive-debug-mode 0 --timeout 240 -C Debug -VV
          continue-on-error: true
          working-directory: ${{env.build_path}}
        # - 
        # TODO: coverage step
        -  
          name: Clean workspace
          if: ${{ always() }}
          run: |
            echo "Cleaning up previous run"
            Remove-Item -LiteralPath "${{ github.workspace }}/${{env.build_path}}" -Force -Recurse
          continue-on-error: true