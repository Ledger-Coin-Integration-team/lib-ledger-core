DerivationPath = interface +c {
    # Get the number of element in this path.
    const getDepth(): i32;

    # Get the child num at the given index in the path.
    const getChildNum(index: i32): i32;

    # Get the child num at the given index in the path. If the child num is hardened, returns it
    # without the hardened marker bit.
    const getUnhardenedChildNum(index: i32): i32;

    # Return true if the given index in the path is an hardened child num.
    const isHardened(index: i32): bool;

    # Serialize the given path to a human readable string like "44'/0'/0'/0/0".
    const toString(addLeadingM: bool): string;

    # Return a derivation path without the last element, e.g. the parent of "44'/0'/0'/0/0" is
    # "44'/0'/0'/0".
    const getAbstractParent(): DerivationPath;

    # Return an array where which item is a child num of the path.
    const toVector(): list<i32>;

    static parse(path: string): DerivationPath;
}
